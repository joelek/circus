// This file was auto-generated by @joelek/autoguard. Edit at own risk.

import * as autoguard from "@joelek/autoguard/dist/lib-shared";
import { MediaInformation } from ".././objects";
import { MediaStatus } from ".././objects";
import { Volume } from ".././objects";

export const LOAD: autoguard.serialization.MessageGuard<LOAD> = autoguard.guards.Object.of({
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral.of("LOAD"),
	"media": autoguard.guards.Reference.of(() => MediaInformation)
}, {
	"autoplay": autoguard.guards.Boolean,
	"currentTime": autoguard.guards.Number,
	"customData": autoguard.guards.Record.of(autoguard.guards.Any),
	"activeTrackIds": autoguard.guards.Array.of(autoguard.guards.Number)
});

export type LOAD = autoguard.guards.Object<{
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral<"LOAD">,
	"media": autoguard.guards.Reference<MediaInformation>
}, {
	"autoplay": autoguard.guards.Boolean,
	"currentTime": autoguard.guards.Number,
	"customData": autoguard.guards.Record<autoguard.guards.Any>,
	"activeTrackIds": autoguard.guards.Array<autoguard.guards.Number>
}>;

export const PAUSE: autoguard.serialization.MessageGuard<PAUSE> = autoguard.guards.Object.of({
	"mediaSessionId": autoguard.guards.Number,
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral.of("PAUSE")
}, {
	"customData": autoguard.guards.Record.of(autoguard.guards.Any)
});

export type PAUSE = autoguard.guards.Object<{
	"mediaSessionId": autoguard.guards.Number,
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral<"PAUSE">
}, {
	"customData": autoguard.guards.Record<autoguard.guards.Any>
}>;

export const SEEK: autoguard.serialization.MessageGuard<SEEK> = autoguard.guards.Object.of({
	"mediaSessionId": autoguard.guards.Number,
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral.of("SEEK")
}, {
	"resumeState": autoguard.guards.Union.of(
		autoguard.guards.StringLiteral.of("PLAYBACK_START"),
		autoguard.guards.StringLiteral.of("PLAYBACK_PAUSE")
	),
	"currentTime": autoguard.guards.Number,
	"customData": autoguard.guards.Record.of(autoguard.guards.Any)
});

export type SEEK = autoguard.guards.Object<{
	"mediaSessionId": autoguard.guards.Number,
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral<"SEEK">
}, {
	"resumeState": autoguard.guards.Union<[
		autoguard.guards.StringLiteral<"PLAYBACK_START">,
		autoguard.guards.StringLiteral<"PLAYBACK_PAUSE">
	]>,
	"currentTime": autoguard.guards.Number,
	"customData": autoguard.guards.Record<autoguard.guards.Any>
}>;

export const STOP: autoguard.serialization.MessageGuard<STOP> = autoguard.guards.Object.of({
	"mediaSessionId": autoguard.guards.Number,
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral.of("STOP")
}, {
	"customData": autoguard.guards.Record.of(autoguard.guards.Any)
});

export type STOP = autoguard.guards.Object<{
	"mediaSessionId": autoguard.guards.Number,
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral<"STOP">
}, {
	"customData": autoguard.guards.Record<autoguard.guards.Any>
}>;

export const PLAY: autoguard.serialization.MessageGuard<PLAY> = autoguard.guards.Object.of({
	"mediaSessionId": autoguard.guards.Number,
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral.of("PLAY")
}, {
	"customData": autoguard.guards.Record.of(autoguard.guards.Any)
});

export type PLAY = autoguard.guards.Object<{
	"mediaSessionId": autoguard.guards.Number,
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral<"PLAY">
}, {
	"customData": autoguard.guards.Record<autoguard.guards.Any>
}>;

export const GET_STATUS: autoguard.serialization.MessageGuard<GET_STATUS> = autoguard.guards.Object.of({
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral.of("GET_STATUS")
}, {
	"mediaSessionId": autoguard.guards.Number,
	"customData": autoguard.guards.Record.of(autoguard.guards.Any)
});

export type GET_STATUS = autoguard.guards.Object<{
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral<"GET_STATUS">
}, {
	"mediaSessionId": autoguard.guards.Number,
	"customData": autoguard.guards.Record<autoguard.guards.Any>
}>;

export const VOLUME: autoguard.serialization.MessageGuard<VOLUME> = autoguard.guards.Object.of({
	"mediaSessionId": autoguard.guards.Number,
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral.of("VOLUME"),
	"volume": autoguard.guards.Reference.of(() => Volume)
}, {
	"customData": autoguard.guards.Record.of(autoguard.guards.Any)
});

export type VOLUME = autoguard.guards.Object<{
	"mediaSessionId": autoguard.guards.Number,
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral<"VOLUME">,
	"volume": autoguard.guards.Reference<Volume>
}, {
	"customData": autoguard.guards.Record<autoguard.guards.Any>
}>;

export const INVALID_PLAYER_STATE: autoguard.serialization.MessageGuard<INVALID_PLAYER_STATE> = autoguard.guards.Object.of({
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral.of("INVALID_PLAYER_STATE")
}, {
	"customData": autoguard.guards.Record.of(autoguard.guards.Any)
});

export type INVALID_PLAYER_STATE = autoguard.guards.Object<{
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral<"INVALID_PLAYER_STATE">
}, {
	"customData": autoguard.guards.Record<autoguard.guards.Any>
}>;

export const LOAD_FAILED: autoguard.serialization.MessageGuard<LOAD_FAILED> = autoguard.guards.Object.of({
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral.of("LOAD_FAILED")
}, {
	"customData": autoguard.guards.Record.of(autoguard.guards.Any)
});

export type LOAD_FAILED = autoguard.guards.Object<{
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral<"LOAD_FAILED">
}, {
	"customData": autoguard.guards.Record<autoguard.guards.Any>
}>;

export const LOAD_CANCELLED: autoguard.serialization.MessageGuard<LOAD_CANCELLED> = autoguard.guards.Object.of({
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral.of("LOAD_CANCELLED")
}, {
	"customData": autoguard.guards.Record.of(autoguard.guards.Any)
});

export type LOAD_CANCELLED = autoguard.guards.Object<{
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral<"LOAD_CANCELLED">
}, {
	"customData": autoguard.guards.Record<autoguard.guards.Any>
}>;

export const INVALID_REQUEST: autoguard.serialization.MessageGuard<INVALID_REQUEST> = autoguard.guards.Object.of({
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral.of("INVALID_REQUEST"),
	"reason": autoguard.guards.Union.of(
		autoguard.guards.StringLiteral.of("INVALID_COMMAND"),
		autoguard.guards.StringLiteral.of("DUPLICATE_REQUESTID")
	)
}, {
	"customData": autoguard.guards.Record.of(autoguard.guards.Any)
});

export type INVALID_REQUEST = autoguard.guards.Object<{
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral<"INVALID_REQUEST">,
	"reason": autoguard.guards.Union<[
		autoguard.guards.StringLiteral<"INVALID_COMMAND">,
		autoguard.guards.StringLiteral<"DUPLICATE_REQUESTID">
	]>
}, {
	"customData": autoguard.guards.Record<autoguard.guards.Any>
}>;

export const MEDIA_STATUS: autoguard.serialization.MessageGuard<MEDIA_STATUS> = autoguard.guards.Object.of({
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral.of("MEDIA_STATUS"),
	"status": autoguard.guards.Array.of(autoguard.guards.Reference.of(() => MediaStatus))
}, {
	"customData": autoguard.guards.Record.of(autoguard.guards.Any)
});

export type MEDIA_STATUS = autoguard.guards.Object<{
	"requestId": autoguard.guards.Number,
	"type": autoguard.guards.StringLiteral<"MEDIA_STATUS">,
	"status": autoguard.guards.Array<autoguard.guards.Reference<MediaStatus>>
}, {
	"customData": autoguard.guards.Record<autoguard.guards.Any>
}>;

export namespace Autoguard {
	export const Guards = {
		"LOAD": autoguard.guards.Reference.of(() => LOAD),
		"PAUSE": autoguard.guards.Reference.of(() => PAUSE),
		"SEEK": autoguard.guards.Reference.of(() => SEEK),
		"STOP": autoguard.guards.Reference.of(() => STOP),
		"PLAY": autoguard.guards.Reference.of(() => PLAY),
		"GET_STATUS": autoguard.guards.Reference.of(() => GET_STATUS),
		"VOLUME": autoguard.guards.Reference.of(() => VOLUME),
		"INVALID_PLAYER_STATE": autoguard.guards.Reference.of(() => INVALID_PLAYER_STATE),
		"LOAD_FAILED": autoguard.guards.Reference.of(() => LOAD_FAILED),
		"LOAD_CANCELLED": autoguard.guards.Reference.of(() => LOAD_CANCELLED),
		"INVALID_REQUEST": autoguard.guards.Reference.of(() => INVALID_REQUEST),
		"MEDIA_STATUS": autoguard.guards.Reference.of(() => MEDIA_STATUS)
	};

	export type Guards = { [A in keyof typeof Guards]: ReturnType<typeof Guards[A]["as"]>; };

	export const Requests = {};

	export type Requests = { [A in keyof typeof Requests]: ReturnType<typeof Requests[A]["as"]>; };

	export const Responses = {};

	export type Responses = { [A in keyof typeof Responses]: ReturnType<typeof Responses[A]["as"]>; };
};
