// This file was auto-generated by @joelek/autoguard. Edit at own risk.

import * as autoguard from "@joelek/autoguard/dist/lib-shared";
import { PlaylistBase } from "../../../api/schema/objects";
import { PlaylistItemBase } from "../../../api/schema/objects";

export const SetToken: autoguard.serialization.MessageGuard<SetToken> = autoguard.guards.Object.of({}, {
	"token": autoguard.guards.String
});

export type SetToken = autoguard.guards.Object<{}, {
	"token": autoguard.guards.String
}>;

export const PermissionsRequest: autoguard.serialization.MessageGuard<PermissionsRequest> = autoguard.guards.Object.of({
	"playlist": autoguard.guards.Object.of({
		"playlist_id": autoguard.guards.String
	}, {})
}, {});

export type PermissionsRequest = autoguard.guards.Object<{
	"playlist": autoguard.guards.Object<{
		"playlist_id": autoguard.guards.String
	}, {}>
}, {}>;

export const PermissionsResponse: autoguard.serialization.MessageGuard<PermissionsResponse> = autoguard.guards.Object.of({
	"permissions": autoguard.guards.Union.of(
		autoguard.guards.StringLiteral.of("read"),
		autoguard.guards.StringLiteral.of("write")
	)
}, {});

export type PermissionsResponse = autoguard.guards.Object<{
	"permissions": autoguard.guards.Union<[
		autoguard.guards.StringLiteral<"read">,
		autoguard.guards.StringLiteral<"write">
	]>
}, {}>;

export const CreatePlaylistRequest: autoguard.serialization.MessageGuard<CreatePlaylistRequest> = autoguard.guards.Object.of({
	"playlist": autoguard.guards.Object.of({
		"title": autoguard.guards.String,
		"description": autoguard.guards.String
	}, {})
}, {});

export type CreatePlaylistRequest = autoguard.guards.Object<{
	"playlist": autoguard.guards.Object<{
		"title": autoguard.guards.String,
		"description": autoguard.guards.String
	}, {}>
}, {}>;

export const CreatePlaylistResponse: autoguard.serialization.MessageGuard<CreatePlaylistResponse> = autoguard.guards.Object.of({
	"errors": autoguard.guards.Array.of(autoguard.guards.String),
	"playlist_id": autoguard.guards.String
}, {});

export type CreatePlaylistResponse = autoguard.guards.Object<{
	"errors": autoguard.guards.Array<autoguard.guards.String>,
	"playlist_id": autoguard.guards.String
}, {}>;

export const CreatePlaylist: autoguard.serialization.MessageGuard<CreatePlaylist> = autoguard.guards.Object.of({
	"playlist": autoguard.guards.Reference.of(() => PlaylistBase)
}, {});

export type CreatePlaylist = autoguard.guards.Object<{
	"playlist": autoguard.guards.Reference<PlaylistBase>
}, {}>;

export const DeletePlaylistRequest: autoguard.serialization.MessageGuard<DeletePlaylistRequest> = autoguard.guards.Object.of({
	"playlist": autoguard.guards.Object.of({
		"playlist_id": autoguard.guards.String
	}, {})
}, {});

export type DeletePlaylistRequest = autoguard.guards.Object<{
	"playlist": autoguard.guards.Object<{
		"playlist_id": autoguard.guards.String
	}, {}>
}, {}>;

export const DeletePlaylistResponse: autoguard.serialization.MessageGuard<DeletePlaylistResponse> = autoguard.guards.Object.of({
	"errors": autoguard.guards.Array.of(autoguard.guards.String)
}, {});

export type DeletePlaylistResponse = autoguard.guards.Object<{
	"errors": autoguard.guards.Array<autoguard.guards.String>
}, {}>;

export const DeletePlaylist: autoguard.serialization.MessageGuard<DeletePlaylist> = autoguard.guards.Object.of({
	"playlist": autoguard.guards.Reference.of(() => PlaylistBase)
}, {});

export type DeletePlaylist = autoguard.guards.Object<{
	"playlist": autoguard.guards.Reference<PlaylistBase>
}, {}>;

export const UpdatePlaylistRequest: autoguard.serialization.MessageGuard<UpdatePlaylistRequest> = autoguard.guards.Object.of({
	"playlist": autoguard.guards.Object.of({
		"playlist_id": autoguard.guards.String,
		"title": autoguard.guards.String,
		"description": autoguard.guards.String
	}, {})
}, {});

export type UpdatePlaylistRequest = autoguard.guards.Object<{
	"playlist": autoguard.guards.Object<{
		"playlist_id": autoguard.guards.String,
		"title": autoguard.guards.String,
		"description": autoguard.guards.String
	}, {}>
}, {}>;

export const UpdatePlaylistResponse: autoguard.serialization.MessageGuard<UpdatePlaylistResponse> = autoguard.guards.Object.of({
	"errors": autoguard.guards.Array.of(autoguard.guards.String)
}, {});

export type UpdatePlaylistResponse = autoguard.guards.Object<{
	"errors": autoguard.guards.Array<autoguard.guards.String>
}, {}>;

export const UpdatePlaylist: autoguard.serialization.MessageGuard<UpdatePlaylist> = autoguard.guards.Object.of({
	"playlist": autoguard.guards.Reference.of(() => PlaylistBase)
}, {});

export type UpdatePlaylist = autoguard.guards.Object<{
	"playlist": autoguard.guards.Reference<PlaylistBase>
}, {}>;

export const CreatePlaylistItemRequest: autoguard.serialization.MessageGuard<CreatePlaylistItemRequest> = autoguard.guards.Object.of({
	"playlist_item": autoguard.guards.Object.of({
		"playlist_id": autoguard.guards.String,
		"track_id": autoguard.guards.String
	}, {})
}, {});

export type CreatePlaylistItemRequest = autoguard.guards.Object<{
	"playlist_item": autoguard.guards.Object<{
		"playlist_id": autoguard.guards.String,
		"track_id": autoguard.guards.String
	}, {}>
}, {}>;

export const CreatePlaylistItemResponse: autoguard.serialization.MessageGuard<CreatePlaylistItemResponse> = autoguard.guards.Object.of({
	"errors": autoguard.guards.Array.of(autoguard.guards.String),
	"playlist_item_id": autoguard.guards.String
}, {});

export type CreatePlaylistItemResponse = autoguard.guards.Object<{
	"errors": autoguard.guards.Array<autoguard.guards.String>,
	"playlist_item_id": autoguard.guards.String
}, {}>;

export const CreatePlaylistItem: autoguard.serialization.MessageGuard<CreatePlaylistItem> = autoguard.guards.Object.of({
	"playlist_item": autoguard.guards.Reference.of(() => PlaylistItemBase)
}, {});

export type CreatePlaylistItem = autoguard.guards.Object<{
	"playlist_item": autoguard.guards.Reference<PlaylistItemBase>
}, {}>;

export const DeletePlaylistItemRequest: autoguard.serialization.MessageGuard<DeletePlaylistItemRequest> = autoguard.guards.Object.of({
	"playlist_item": autoguard.guards.Object.of({
		"playlist_item_id": autoguard.guards.String
	}, {})
}, {});

export type DeletePlaylistItemRequest = autoguard.guards.Object<{
	"playlist_item": autoguard.guards.Object<{
		"playlist_item_id": autoguard.guards.String
	}, {}>
}, {}>;

export const DeletePlaylistItemResponse: autoguard.serialization.MessageGuard<DeletePlaylistItemResponse> = autoguard.guards.Object.of({
	"errors": autoguard.guards.Array.of(autoguard.guards.String)
}, {});

export type DeletePlaylistItemResponse = autoguard.guards.Object<{
	"errors": autoguard.guards.Array<autoguard.guards.String>
}, {}>;

export const DeletePlaylistItem: autoguard.serialization.MessageGuard<DeletePlaylistItem> = autoguard.guards.Object.of({
	"playlist_item": autoguard.guards.Reference.of(() => PlaylistItemBase)
}, {});

export type DeletePlaylistItem = autoguard.guards.Object<{
	"playlist_item": autoguard.guards.Reference<PlaylistItemBase>
}, {}>;

export const UpdatePlaylistItemRequest: autoguard.serialization.MessageGuard<UpdatePlaylistItemRequest> = autoguard.guards.Object.of({
	"playlist_item": autoguard.guards.Object.of({
		"playlist_item_id": autoguard.guards.String,
		"number": autoguard.guards.Number
	}, {})
}, {});

export type UpdatePlaylistItemRequest = autoguard.guards.Object<{
	"playlist_item": autoguard.guards.Object<{
		"playlist_item_id": autoguard.guards.String,
		"number": autoguard.guards.Number
	}, {}>
}, {}>;

export const UpdatePlaylistItemResponse: autoguard.serialization.MessageGuard<UpdatePlaylistItemResponse> = autoguard.guards.Object.of({
	"errors": autoguard.guards.Array.of(autoguard.guards.String)
}, {});

export type UpdatePlaylistItemResponse = autoguard.guards.Object<{
	"errors": autoguard.guards.Array<autoguard.guards.String>
}, {}>;

export const UpdatePlaylistItem: autoguard.serialization.MessageGuard<UpdatePlaylistItem> = autoguard.guards.Object.of({
	"playlist_item": autoguard.guards.Reference.of(() => PlaylistItemBase)
}, {});

export type UpdatePlaylistItem = autoguard.guards.Object<{
	"playlist_item": autoguard.guards.Reference<PlaylistItemBase>
}, {}>;

export namespace Autoguard {
	export const Guards = {
		"SetToken": autoguard.guards.Reference.of(() => SetToken),
		"PermissionsRequest": autoguard.guards.Reference.of(() => PermissionsRequest),
		"PermissionsResponse": autoguard.guards.Reference.of(() => PermissionsResponse),
		"CreatePlaylistRequest": autoguard.guards.Reference.of(() => CreatePlaylistRequest),
		"CreatePlaylistResponse": autoguard.guards.Reference.of(() => CreatePlaylistResponse),
		"CreatePlaylist": autoguard.guards.Reference.of(() => CreatePlaylist),
		"DeletePlaylistRequest": autoguard.guards.Reference.of(() => DeletePlaylistRequest),
		"DeletePlaylistResponse": autoguard.guards.Reference.of(() => DeletePlaylistResponse),
		"DeletePlaylist": autoguard.guards.Reference.of(() => DeletePlaylist),
		"UpdatePlaylistRequest": autoguard.guards.Reference.of(() => UpdatePlaylistRequest),
		"UpdatePlaylistResponse": autoguard.guards.Reference.of(() => UpdatePlaylistResponse),
		"UpdatePlaylist": autoguard.guards.Reference.of(() => UpdatePlaylist),
		"CreatePlaylistItemRequest": autoguard.guards.Reference.of(() => CreatePlaylistItemRequest),
		"CreatePlaylistItemResponse": autoguard.guards.Reference.of(() => CreatePlaylistItemResponse),
		"CreatePlaylistItem": autoguard.guards.Reference.of(() => CreatePlaylistItem),
		"DeletePlaylistItemRequest": autoguard.guards.Reference.of(() => DeletePlaylistItemRequest),
		"DeletePlaylistItemResponse": autoguard.guards.Reference.of(() => DeletePlaylistItemResponse),
		"DeletePlaylistItem": autoguard.guards.Reference.of(() => DeletePlaylistItem),
		"UpdatePlaylistItemRequest": autoguard.guards.Reference.of(() => UpdatePlaylistItemRequest),
		"UpdatePlaylistItemResponse": autoguard.guards.Reference.of(() => UpdatePlaylistItemResponse),
		"UpdatePlaylistItem": autoguard.guards.Reference.of(() => UpdatePlaylistItem)
	};

	export type Guards = { [A in keyof typeof Guards]: ReturnType<typeof Guards[A]["as"]>; };

	export const Requests = {};

	export type Requests = { [A in keyof typeof Requests]: ReturnType<typeof Requests[A]["as"]>; };

	export const Responses = {};

	export type Responses = { [A in keyof typeof Responses]: ReturnType<typeof Responses[A]["as"]>; };
};
