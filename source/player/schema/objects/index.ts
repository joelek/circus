// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import * as autoguard from "@joelek/ts-autoguard/dist/lib-shared";
import { Album } from "../../../api/schema/objects";
import { Artist } from "../../../api/schema/objects";
import { Disc } from "../../../api/schema/objects";
import { Episode } from "../../../api/schema/objects";
import { Movie } from "../../../api/schema/objects";
import { Playlist } from "../../../api/schema/objects";
import { Season } from "../../../api/schema/objects";
import { Show } from "../../../api/schema/objects";
import { Track } from "../../../api/schema/objects";

export const ContextAlbum: autoguard.serialization.MessageGuard<ContextAlbum> = autoguard.guards.Reference.of(() => Album);

export type ContextAlbum = autoguard.guards.Reference<Album>;

export const ContextArtist: autoguard.serialization.MessageGuard<ContextArtist> = autoguard.guards.Reference.of(() => Artist);

export type ContextArtist = autoguard.guards.Reference<Artist>;

export const ContextDisc: autoguard.serialization.MessageGuard<ContextDisc> = autoguard.guards.Reference.of(() => Disc);

export type ContextDisc = autoguard.guards.Reference<Disc>;

export const ContextTrack: autoguard.serialization.MessageGuard<ContextTrack> = autoguard.guards.Reference.of(() => Track);

export type ContextTrack = autoguard.guards.Reference<Track>;

export const ContextPlaylist: autoguard.serialization.MessageGuard<ContextPlaylist> = autoguard.guards.Reference.of(() => Playlist);

export type ContextPlaylist = autoguard.guards.Reference<Playlist>;

export const ContextMovie: autoguard.serialization.MessageGuard<ContextMovie> = autoguard.guards.Reference.of(() => Movie);

export type ContextMovie = autoguard.guards.Reference<Movie>;

export const ContextShow: autoguard.serialization.MessageGuard<ContextShow> = autoguard.guards.Reference.of(() => Show);

export type ContextShow = autoguard.guards.Reference<Show>;

export const ContextSeason: autoguard.serialization.MessageGuard<ContextSeason> = autoguard.guards.Reference.of(() => Season);

export type ContextSeason = autoguard.guards.Reference<Season>;

export const ContextEpisode: autoguard.serialization.MessageGuard<ContextEpisode> = autoguard.guards.Reference.of(() => Episode);

export type ContextEpisode = autoguard.guards.Reference<Episode>;

export const Context: autoguard.serialization.MessageGuard<Context> = autoguard.guards.Union.of(
	autoguard.guards.Reference.of(() => ContextAlbum),
	autoguard.guards.Reference.of(() => ContextArtist),
	autoguard.guards.Reference.of(() => ContextDisc),
	autoguard.guards.Reference.of(() => ContextTrack),
	autoguard.guards.Reference.of(() => ContextPlaylist),
	autoguard.guards.Reference.of(() => ContextMovie),
	autoguard.guards.Reference.of(() => ContextShow),
	autoguard.guards.Reference.of(() => ContextSeason),
	autoguard.guards.Reference.of(() => ContextEpisode)
);

export type Context = autoguard.guards.Union<[
	autoguard.guards.Reference<ContextAlbum>,
	autoguard.guards.Reference<ContextArtist>,
	autoguard.guards.Reference<ContextDisc>,
	autoguard.guards.Reference<ContextTrack>,
	autoguard.guards.Reference<ContextPlaylist>,
	autoguard.guards.Reference<ContextMovie>,
	autoguard.guards.Reference<ContextShow>,
	autoguard.guards.Reference<ContextSeason>,
	autoguard.guards.Reference<ContextEpisode>
]>;

export const ContextItem: autoguard.serialization.MessageGuard<ContextItem> = autoguard.guards.Union.of(
	autoguard.guards.Reference.of(() => ContextTrack),
	autoguard.guards.Reference.of(() => ContextMovie),
	autoguard.guards.Reference.of(() => ContextEpisode)
);

export type ContextItem = autoguard.guards.Union<[
	autoguard.guards.Reference<ContextTrack>,
	autoguard.guards.Reference<ContextMovie>,
	autoguard.guards.Reference<ContextEpisode>
]>;

export const Device: autoguard.serialization.MessageGuard<Device> = autoguard.guards.Object.of({
	"id": autoguard.guards.String,
	"protocol": autoguard.guards.String,
	"name": autoguard.guards.String,
	"type": autoguard.guards.String
}, {});

export type Device = autoguard.guards.Object<{
	"id": autoguard.guards.String,
	"protocol": autoguard.guards.String,
	"name": autoguard.guards.String,
	"type": autoguard.guards.String
}, {}>;

export const Session: autoguard.serialization.MessageGuard<Session> = autoguard.guards.Object.of({
	"playback": autoguard.guards.Boolean
}, {
	"context": autoguard.guards.Reference.of(() => Context),
	"device": autoguard.guards.Reference.of(() => Device),
	"index": autoguard.guards.Number,
	"progress": autoguard.guards.Number
});

export type Session = autoguard.guards.Object<{
	"playback": autoguard.guards.Boolean
}, {
	"context": autoguard.guards.Reference<Context>,
	"device": autoguard.guards.Reference<Device>,
	"index": autoguard.guards.Number,
	"progress": autoguard.guards.Number
}>;

export namespace Autoguard {
	export const Guards = {
		"ContextAlbum": autoguard.guards.Reference.of(() => ContextAlbum),
		"ContextArtist": autoguard.guards.Reference.of(() => ContextArtist),
		"ContextDisc": autoguard.guards.Reference.of(() => ContextDisc),
		"ContextTrack": autoguard.guards.Reference.of(() => ContextTrack),
		"ContextPlaylist": autoguard.guards.Reference.of(() => ContextPlaylist),
		"ContextMovie": autoguard.guards.Reference.of(() => ContextMovie),
		"ContextShow": autoguard.guards.Reference.of(() => ContextShow),
		"ContextSeason": autoguard.guards.Reference.of(() => ContextSeason),
		"ContextEpisode": autoguard.guards.Reference.of(() => ContextEpisode),
		"Context": autoguard.guards.Reference.of(() => Context),
		"ContextItem": autoguard.guards.Reference.of(() => ContextItem),
		"Device": autoguard.guards.Reference.of(() => Device),
		"Session": autoguard.guards.Reference.of(() => Session)
	};

	export type Guards = { [A in keyof typeof Guards]: ReturnType<typeof Guards[A]["as"]>; };

	export const Requests = {};

	export type Requests = { [A in keyof typeof Requests]: ReturnType<typeof Requests[A]["as"]>; };

	export const Responses = {};

	export type Responses = { [A in keyof typeof Responses]: ReturnType<typeof Responses[A]["as"]>; };
};
